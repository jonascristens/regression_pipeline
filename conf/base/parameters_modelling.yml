# This is a boilerplate parameters config generated for pipeline 'modelling'
# using Kedro 0.19.11.
#
# Documentation for this file format can be found in "Parameters"
# Link: https://docs.kedro.org/en/0.19.11/configuration/parameters.html

_random_state: &random_state 42

_features: &features
  # categorical columns
  - "product_cluster_shp"
  - "loyalty_code_cust"
  - "industry"  # 'industry_code_cust'
  - "opportunity_type_oppo"
  - "lead_cust"  # 'reason_for_lead_cust'
  - "initiator_cust"  # 'lead_source_type_cust'
  - "competitor_oppo"  # 'primary_competitor_oppo'

  # numeric columns
  - "log_published_revenue"
  - "log_published_revenue_sq"
  - "log_potential_revenue"
  - "log_offer_published_revenue"
  - "log_shipments"
  - "log_wps"
  - "log_weight"
  - "prod_mix_tdexport"
  - "prod_mix_tdimport"
  - "prod_mix_td3rd"
  # - "prod_mix_ddexport" # not available in dataset
  # - "prod_mix_ddimport" # not available in dataset
  # - "prod_mix_dd3rd" # not available in dataset
  - "prod_mix_tddom"
  # - "prod_mix_td3dom" # not available in dataset
  - "prod_mix_other"
  - ecomm


modelling:
  target:
    original_target_col: final_outcome
    target_col: "${globals:target_col}"

  filter_dataset:
    organization_id: "DHL CO"
    target_col: "${globals:target_col}"
    discount_col: "discount_shp"

  split:
    target_col: "${globals:target_col}"
    date_col: "${globals:date_col}"

    train_start: "2022-11-01"
    train_end: "2023-05-01"
    test_start: "2023-05-01"
    test_end: "2023-08-01"

    features: *features


  pipeline:
    other_features: *features
    # target_encoding_features:
    #   - "product_cluster_shp"
    #   - "loyalty_code_cust"
    #   - "industry"  # 'industry_code_cust'
    #   - "opportunity_type_oppo"
    #   - "lead_cust"  # 'reason_for_lead_cust'
    #   - "initiator_cust"  # 'lead_source_type_cust'
    #   - "competitor_oppo"  # 'primary_competitor_oppo'
    # target_encoding:
    #   random_state: *random_state

    # ordinal_features: None
    # ordinal_encoding: None

    model:
      # TODO implement positive monotonicity constraint for discount_shp
      random_state: *random_state
      objective: 'binary'
      verbosity: -1

  train:
    scoring: 'neg_log_loss'
    cv_conf:
      n_splits: 5
    sampler_conf:
      seed: *random_state
    study_conf:
      n_trials: 2

  train_val:
    test_size: 0.3
